// Searching in an array where adjacent differ by at most k
#include <iostream>
#include<bits/stdc++.h>
using namespace std;

int find(int x, int d,  int s, int a[]){
	int i = 0;

	// Traverse the array
		while(i < s){
			// Return index if element is present in index i
			if(a[i] == x){
				return i;
			}

			// Move to difference of present value and the target value divided by the at-most difference
			// Use abs() to get the positive integer
			// Use max() to increment the i to at-least 1
			i = i + max(1, abs(a[i] - x) / d);
		}

		return -1;
}

int main() {
	int s, x, d, i = 0;

	cout << "Enter the size of the array: ";
	cin >> s;

	int a[s] = {};

	cout << "Enter the elements of the array: ";
	for(int i=0; i<s; i++){
		cin >> a[i];
	}

	cout << "Enter the at-most difference: ";
	cin >> d;

	cout << "Enter the element you are searching for : ";
	cin >> x;

	i = find(x, d, s, a);

	cout << "The element " << x << " is present at index " << i << endl;

	return 0;
}

