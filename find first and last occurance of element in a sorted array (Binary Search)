//https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/

class Solution {

public:
    int binarySearch(vector<int>& nums, int target, int low, int high, bool first_occurance){
        int result = -1;
        
        while(low <= high){
            int mid = (low+high) / 2;
            
            if(target == nums[mid]){
                result = mid;
                if(first_occurance)
                    high = mid - 1;
                else
                    low = mid + 1;
            }else if(target < nums[mid]){
                high = mid - 1;
            }else{
                //target > nums[mid]
                low = mid + 1;
            }
        }
        
        return result;
    }
    
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        int size = nums.size();
        int low = 0;
        int high = size - 1;
        
        int fo = binarySearch(nums, target, low, high, true);
        int lo = binarySearch(nums, target, low, high, false);
        
        return {fo, lo};
    }
};
